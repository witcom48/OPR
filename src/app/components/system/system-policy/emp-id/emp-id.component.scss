.center {
    margin: auto;  //ระยะขอบ ผลักอัตโนมัติ
    width: 50%;   //ความกว้าง 50%
    // border: 3px solid blue;   //ความหนา รูปแบบ สีของขอบ
    padding: 5%;  //ขยายขอบด้านใน
 }

p-dropdown{
    width: '100%'; overflow: 'visible';

}


.table_summary_{
    border-collapse: collapse;
}

.table_summary_ td{
    padding: 5px;
    border: 0px solid #ccc;
}


.main_div {
    text-align:left;
    position: relative;
    padding: 5px;
    height: 100px;
    width: 100px;
    background-color: #152047;
}
.sub_div {
    position: absolute;
    bottom: 5px;
}

.spn_value{
    color: #FFFFFF;
    font-size: 16px;
}

.spn_title{
    color: #FFFFFF;
    font-size: 12px;
}

.spn_title_edit{
    margin: 70px 0px 10px 15px;
    font-weight: bold;
    font-size: 15px;
}

.td_amount{
    text-align: right;
    padding-right: 10px;
}

::ng-deep .input-styling input {
    width: 40px !important;
  }

  textarea{
    width: 100%;

  }


  .spn_title_edit_procontact{
    margin: 350px 0px 10px 15px;
    font-weight: bold;
    font-size: 15px;
}

h1 {
    font-size: 15px;
}

h2 {
    border-left: 0;
}

p {
    font-size: 14px;
}

//   <p-menubar [model]="toolbar_menu"></p-menubar>
//   <p-card header="Codestructure" [style]="{'margin-top': '0px','margin-bottom': '2em' }">
//       <div class="grid">
//           <div class="col-12 md:col-9">
//               <p-tabView (onChange)="tabChange($event)">
//                   <div class="empinfo">
//                       <!-- empid -->
//                       <div class="field col-12">
//                           <p-accordion>
//                               <p-menubar [model]="menu_TRPolcode"></p-menubar>
//                               <p-table #dtempcard [value]="TRPolcodeList" styleClass="p-datatable-sm"
//                                   [tableStyle]="{'min-width': '60rem'}" [scrollable]="true" scrollHeight="200px"
//                                   [virtualScroll]="true" selectionMode="single" [(selection)]="selectedTRPolcode"
//                                   (onRowSelect)="onRowSelectTRPolcode($event)" [rows]="10" [showCurrentPageReport]="true"
//                                   [rowsPerPageOptions]="[10,25,50]" [paginator]="true"
//                                   currentPageReportTemplate="Showing {first} to {last} of {totalRecords} entries">
//                                   <ng-template pTemplate="header">
//                                       <tr>
//                                           <th>Code</th>
//                                           <th>Detail</th>
//                                           <th>Lenght</th>
//                                           <th>Text</th>
//                                       </tr>
//                                   </ng-template>
//                                   <ng-template pTemplate="body" let-data>
//                                       <tr [pSelectableRow]="data">
//                                           <th>{{data.codestructure_code }}</th>
//                                           <th>{{data.polcode_lenght}}</th>
//                                           <th>{{data.polcode_text}}</th>
//                                           <th>{{data.polcode_order}}</th>
  
//                                       </tr>
//                                   </ng-template>
//                               </p-table>
//                           </p-accordion>
//                       </div>
  
//                       <p-dialog header="{{manage_title}}" [(visible)]="displayManage" [position]="position">
//                           <div class="formatt" *ngIf="edit_TRPolcode==true || new_TRPolcode==true">
//                               <!-- Form Card -->
                               
                            //  <!-- <input pInputText type="text" id="polcode_lenght" [(ngModel)]="selectedTRPolcode.codestructure_code"> -->
                            //   <label>Code</label>
                            //   <p-dropdown placeholder="--" [options]="codestructureList" optionValue="codestructure_code"
                            //       [showClear]="true" [(ngModel)]="selectedTRPolcode.codestructure_code"
                            //       [style]="{ width: '100%', overflow: 'visible' }">
                            //       <ng-template let-item pTemplate="selectedItem">
                            //           {{initial_current.Language=="TH"? item.codestructure_name_th :
                            //           item.codestructure_name_en}}
                            //       </ng-template>
                            //       <ng-template let-item pTemplate="item">
                            //           {{initial_current.Language=="TH"? item.codestructure_name_th :
                            //           item.codestructure_name_en}}
                            //       </ng-template>
                            //   </p-dropdown>
  
                            //   <label>Detail</label>
                            //   <input pInputText type="text" id="polcode_lenght" [(ngModel)]="selectedTRPolcode.polcode_lenght">
  
                            //   <label>Lenght</label>
                            //   <input pInputText type="text" id="polcode_lenght" [(ngModel)]="selectedTRPolcode.polcode_text">
  
                            //   <label>Text</label>
                            //   <input pInputText type="text" id="polcode_lenght" [(ngModel)]="selectedTRPolcode.polcode_order">
  
  
//                               <br>
//                               <button pButton type="button" label="{{title_summit}}" icon="pi pi-check"
//                                   (click)="TRPolcode_summit()"></button>
//                               <button pButton type="button" label="{{title_cancel}}" icon="pi pi-times"
//                                   class="p-button-danger" (click)="TRPolcode_cancel()"></button>
//                           </div>
//                       </p-dialog>
//                   </div>
  
//                   <!-- ConfirmDialog and toast Noti -->
//                   <p-toast position="top-right"></p-toast>
//                   <p-confirmDialog [style]="{width: '50vw'}" [baseZIndex]="10000"
//                       rejectButtonStyleClass="p-button-text"></p-confirmDialog>
//                   <!-- ----------------------END Confirm and Toast------------------------ -->




//   import { DatePipe } from '@angular/common';
// import { Component, OnInit } from '@angular/core';
// import { ActivatedRoute, Router } from '@angular/router';
// import {ConfirmationService,MegaMenuItem,MenuItem,MessageService,} from 'primeng/api';
// import { CombranchModel } from 'src/app/models/system/branch';
// import { ComaddressModel } from 'src/app/models/system/comaddress';
// import { ComcardModel } from 'src/app/models/system/comcard';
// import { AddresstypeModel } from 'src/app/models/system/policy/addresstype';
// import { CardtypeModel } from 'src/app/models/system/policy/cardtype';
// import { ProvinceModel } from 'src/app/models/system/policy/province';
// import { EmpDetailService } from 'src/app/services/emp/worker_detail.service';
// import { CombranchDetailService } from 'src/app/services/system/combranch-detail.service';
// import { CombranchService } from 'src/app/services/system/combranch.service';
// import { AddresstypeService } from 'src/app/services/system/policy/addresstype.service';
// import { CardtypeService } from 'src/app/services/system/policy/cardtype.service';
// import { ProvinceService } from 'src/app/services/system/policy/province.service';
// import { AppConfig } from '../../../../config/config';
// import { InitialCurrent } from '../../../../config/initial_current';
// import { TRPolcodeModel } from 'src/app/models/system/policy/tr_polcode';
// import { PolcodeService } from 'src/app/services/system/policy/polcode.service';

// interface Taxmethod {
//     name_th: string;
//     name_en: string;
//     code: string;
// }

// @Component({
//   selector: 'app-emp-id',
//   templateUrl: './emp-id.component.html',
//   styleUrls: ['./emp-id.component.scss']
// })
// export class EmpIDComponent implements OnInit {
//     combranch_code: string = '';
//     manage_title: string = '';

//     toolbar_menu: MenuItem[] = [];
//     items: MenuItem[] = [];
//     items_tab: MenuItem[] = [];

//     combranch_list: CombranchModel[] = [];
//     selectedCombranch: CombranchModel = new CombranchModel();

//     edit_combranch: boolean = false;
//     new_combranch: boolean = false;

//     //menu Comaddress
//     menu_comaddress: MenuItem[] = [];
//     edit_comaddress: boolean = false;
//     new_comaddress: boolean = false;
//      //menu Comaddress en
//      menu_comaddresseen: MenuItem[] = [];
//      edit_comaddresseen: boolean = false;
//      new_comaddresseen: boolean = false;


//     //menu comcard
//     menu_comcard: MenuItem[] = [];
//     edit_comcard: boolean = false;
//     new_card: boolean = false;

//     displayManage: boolean = false;

//     constructor(
//         private combranchService: CombranchService,
//         private router: Router,
//         private route: ActivatedRoute,
//         private messageService: MessageService,
//         private confirmationService: ConfirmationService,
//         private datePipe: DatePipe,
//         private empdetailService: EmpDetailService,
//         private combranchDetailService: CombranchDetailService,

//         private polcodeService: PolcodeService,


//         //service
//         private cardtypeService: CardtypeService,
//         private addresstypeService: AddresstypeService,
//         private provinceService: ProvinceService
//     ) {}

//     ngOnInit(): void {
//         this.route.queryParams.subscribe((params) => {
//             this.combranch_code = params['combranchcode'];
//             // console.log(this.combranch_code);
//         });

//         this.doGetInitialCurrent();

//         // Dropdown
//         this.doLoadcardList();
//         this.doLoadaddressList();
//         this.doLoadprovinceList();

//         setTimeout(() => {
//             this.doLoadMenu();
//         }, 100);

//         setTimeout(() => {
//             if (this.combranch_code != '') {
//                 this.doLoadCombranch();
//             }
//         }, 400);
//     }

//     public initial_current: InitialCurrent = new InitialCurrent();
//     doGetInitialCurrent() {
//         this.initial_current = JSON.parse(
//             localStorage.getItem(AppConfig.SESSIONInitial) || '{}'
//         );
//         if (!this.initial_current) {
//             this.router.navigateByUrl('login');
//         }
//     }

//     title_page: string = 'combranch';
//     title_new: string = 'New';
//     title_edit: string = 'Edit';
//     title_delete: string = 'Delete';
//     title_import: string = 'Import';
//     title_export: string = 'Export';
//     title_save: string = 'Save';
//     title_code: string = 'Code';

//     title_summit: string = 'Summit';
//     title_cancel: string = 'Cancel';

//     title_genaral: string = 'Genaral';

//     title_fname_th: string = 'First Name (Thai)';
//     title_lname_th: string = 'Last Name (Thai)';
//     title_fname_en: string = 'First Name (Eng.)';
//     title_lname_en: string = 'Last Name (Eng.)';
//     title_initial: string = 'Initial';

//     title_birthdate: string = 'Birth Date';
//     title_startdate: string = 'Start Date';
//     title_hrs: string = 'Hour/Day';
//     title_probation: string = 'Probation';
//     title_probationdate: string = 'Probation Date';
//     title_probationenddate: string = 'Probation End';
//     title_resignstatus: string = 'Resign Status';
//     title_resigndate: string = 'Resign Date';
//     title_resignreason: string = 'Resign Reason';

//     title_personal: string = 'Personal';
//     title_religion: string = 'Religion';
//     title_blood: string = 'Blood';
//     title_weight: string = 'Weight';
//     title_height: string = 'Height';
//     title_address: string = 'Address';
//     title_card: string = 'Card';
//     title_family: string = 'Family';
//     title_hospital: string = 'Hospital';
//     title_foreigner: string = 'Foreigner';

//     title_record: string = 'Record';
//     title_department: string = 'Department';
//     title_position: string = 'Position';
//     title_training: string = 'Training';
//     title_education: string = 'Education';
//     title_assessment: string = 'Assessment';
//     title_criminal: string = 'Criminal Record';

//     title_finance: string = 'Finance';
//     title_taxmethod: string = 'Tax Method';
//     title_salary: string = 'Salary';
//     title_benefit: string = 'Benefit';
//     title_fund: string = 'Provident Fund';
//     title_reduce: string = 'Reduces';
//     title_accumulate: string = 'Accumalate';

//     title_tranfer: string = 'Tranfer record';

//     title_modified_by: string = 'Edit by';
//     title_modified_date: string = 'Edit date';
//     title_search: string = 'Search';
//     title_upload: string = 'Upload';

//     title_page_from: string = 'Showing';
//     title_page_to: string = 'to';
//     title_page_total: string = 'of';
//     title_page_record: string = 'entries';

//     title_confirm: string = 'Are you sure?';
//     title_confirm_record: string = 'Confirm to record';
//     title_confirm_delete: string = 'Confirm to delete';
//     title_confirm_yes: string = 'Yes';
//     title_confirm_no: string = 'No';

//     title_confirm_cancel: string = 'You have cancelled';

//     doLoadLanguage() {
//         if (this.initial_current.Language == 'TH') {
//             this.title_page = 'ข้อมูลสถานที่ปฎิบัติงาน';
//             this.title_new = 'เพิ่ม';
//             this.title_edit = 'แก้ไข';
//             this.title_delete = 'ลบ';
//             this.title_import = 'นำเข้า';
//             this.title_export = 'โอนออก';
//             this.title_save = 'บันทึก';

//             this.title_summit = 'บันทึก';
//             this.title_cancel = 'ยกเลิก';

//             this.title_genaral = 'ข้อมูลทั่วไป';
//             this.title_code = 'รหัสพนักงาน';
//             this.title_fname_th = 'ชื่อจริง (ไทย)';
//             this.title_lname_th = 'นามสกุล (ไทย)';
//             this.title_fname_en = 'ชื่อจริง (อังกฤษ)';
//             this.title_lname_en = 'นามสกุล (อังกฤษ)';
//             this.title_initial = 'คำนำหน้า';

//             this.title_birthdate = 'วันเกิด';
//             this.title_startdate = 'วันที่เริ่มงาน';
//             this.title_hrs = 'ชั่วโมงทำงาน';
//             this.title_probation = 'จำนวนวันทดลองงาน';
//             this.title_probationdate = 'วันที่เริ่มทดลองงาน';
//             this.title_probationenddate = 'วันที่สิ้นสุดทดลองงาน';
//             this.title_resignstatus = 'ลาออก';
//             this.title_resigndate = 'วันที่ลาออก';
//             this.title_resignreason = 'เหตุผลการลาออก';

//             this.title_personal = 'ข้อมูลส่วนตัว';
//             this.title_religion = 'ศาสนา';
//             this.title_blood = 'กรุ๊ปเลือด';
//             this.title_weight = 'นํ้าหนัก';
//             this.title_height = 'ส่วนสูง';
//             this.title_address = 'ที่อยู่';
//             this.title_card = 'ข้อมูลบัตร';
//             this.title_family = 'ข้อมูลครอบครัว';
//             this.title_hospital = 'ข้อมูลโรงพยาบาล';
//             this.title_foreigner = 'ข้อมูลพนักงานต่างด้าว';

//             this.title_record = 'ข้อมูลประวัติ';
//             this.title_department = 'สังกัด';
//             this.title_position = 'ตำแหน่ง';
//             this.title_education = 'ประวัติการศึกษา';
//             this.title_training = 'ประวัติการอบรม';
//             this.title_assessment = 'ประวัติการประเมิน';
//             this.title_criminal = 'ประวัติการตรวจสอบอาชญากรรม';

//             this.title_finance = 'การเงิน';
//             this.title_taxmethod = 'การคำนวนภาษี';
//             this.title_salary = 'เงินเดือน/ค่าจ้าง';
//             this.title_benefit = 'สวัสดิการ';
//             this.title_fund = 'กองทุนสำรองเลี้ยงชีพ';
//             this.title_reduce = 'ค่าลดหย่อน';
//             this.title_accumulate = 'รายได้สะสม/ภาษีสะสม';

//             this.title_tranfer = 'ประวัติการโอนย้ายหน่วยงาน';

//             this.title_modified_by = 'ผู้ทำรายการ';
//             this.title_modified_date = 'วันที่ทำรายการ';
//             this.title_search = 'ค้นหา';
//             this.title_upload = 'อัพโหลด';

//             this.title_page_from = 'แสดง';
//             this.title_page_to = 'ถึง';
//             this.title_page_total = 'จาก';
//             this.title_page_record = 'รายการ';

//             this.title_confirm = 'ยืนยันการทำรายการ';
//             this.title_confirm_record = 'คุณต้องการบันทึกการทำรายการ';
//             this.title_confirm_delete = 'คุณต้องการลบรายการ';

//             this.title_confirm_yes = 'ใช่';
//             this.title_confirm_no = 'ยกเลิก';
//             this.title_confirm_cancel = 'คุณยกเลิกการทำรายการ';
//         }
//     }

//     doLoadMenu() {
//         //menumain
//         this.toolbar_menu = [
//             {
//                 label: 'Back',
//                 icon: 'pi-arrow-left',
//                 command: (event) => {
//                     this.router.navigateByUrl('system/Branch');
//                 },
//             },
//             {
//                 label: 'Save',
//                 icon: 'pi pi-fw pi-save',
//                 command: (event) => {
//                     // console.log('Save');
//                     this.confirmRecord();
//                 },
//             },
//         ];


//         //menu card
//         this.menu_comcard = [
//             {
//                 label: 'New',
//                 icon: 'pi pi-fw pi-plus',
//                 command: (event) => {
//                     this.clearManage();
//                     this.new_card = true;
//                     var ref = this.TRPolcodeList.length + 100;
//                     this.selectedTRPolcode = new TRPolcodeModel();
//                     this.selectedTRPolcode.polcode_id = ref.toString();
//                     this.showManage();
//                 },
//             },
//             {
//                 label: 'Edit',
//                 icon: 'pi pi-fw pi-pencil',
//                 command: (event) => {
//                     this.clearManage();
//                     if (this.selectedTRPolcode != null) {
//                         this.edit_comcard = true;
//                         this.showManage();
//                     }
//                 },
//             },
//             {
//                 label: 'Delete',
//                 icon: 'pi pi-fw pi-trash',
//                 command: (event) => {
//                     if (this.selectedTRPolcode != null) {
//                         this.comcard_remove();
//                     }
//                 },
//             },
//             {
//                 label: 'Import',
//                 icon: 'pi pi-fw pi-file-import',
//                 command: (event) => {},
//             },
//             {
//                 label: 'Export',
//                 icon: 'pi pi-fw pi-file-export',
//                 command: (event) => {},
//             },
//         ];
//     }

//     tabChange(e: { index: any }) {
//         var index = e.index;

//         this.edit_comaddress = false;
//         this.new_comaddress = false;
//         //
//         this.edit_comaddresseen = false;
//         this.new_comaddresseen = false;
//         //
//         this.edit_comcard = false;
//         this.new_card = false;
//         //

//         this.displayManage = false;
//     }

//     position: string = 'right';
//     showManage() {
//         this.displayManage = true;

//         if (this.initial_current.Language == 'EN') {
//             if (this.new_comaddress || this.edit_comaddress) {
//                 this.manage_title = 'Address';
//             } else if (this.new_comaddresseen || this.edit_comaddresseen) {
//                 this.manage_title = 'Addressen';
//             } else if (this.new_card || this.edit_comcard) {
//                 this.manage_title = 'Card';
//             }
//         } else {
//             if (this.new_comaddress || this.edit_comaddress) {
//                 this.manage_title = 'ที่อยู่';

//             } else if (this.new_comaddresseen || this.edit_comaddresseen) {
//                 this.manage_title = 'ที่อยู่ene';
//             } else if (this.new_card || this.edit_comcard) {
//                 this.manage_title = 'ข้อมูลบัตร';
//             }
//         }
//     }

//     doLoadCombranch() {
//         var Combranch_list: CombranchModel[] = [];
//         this.combranchService
//             .combranch_get(this.combranch_code)
//             .then(async (res) => {
//                 await res.forEach((element: CombranchModel) => {});

//                 Combranch_list = await res;
//                 // console.log(res);

//                 if (Combranch_list.length > 0) {
//                     this.selectedCombranch = Combranch_list[0];

//                     setTimeout(() => {
//                         this.doLoadTRPolcode();
//                     }, 300);
//                 }
//             });
//     }

//     // get data dropdown

//     cardList: CardtypeModel[] = [];
//     doLoadcardList() {
//         this.cardtypeService.cardtype_get().then((res) => {
//             this.cardList = res;
//         });
//     }
//     addressList: AddresstypeModel[] = [];
//     doLoadaddressList() {
//         this.addresstypeService.addresstype_get().then((res) => {
//             this.addressList = res;
//         });
//     }
//     provinceList: ProvinceModel[] = [];
//     doLoadprovinceList() {
//         this.provinceService.province_get().then((res) => {
//             this.provinceList = res;
//         });
//     }

//     //TRPolcode
//     TRPolcodeList: TRPolcodeModel[] = [];
//     selectedTRPolcode: TRPolcodeModel = new TRPolcodeModel();

//     // selectedComcard: ComcardModel = new ComcardModel();
//     doLoadTRPolcode() {
//         this.polcodeService
//             .getTRPolcodeList(
//                 this.initial_current.CompCode,
//                 // this.combranch_code
//             )
//             // .then(async (res: TRPolcodeModel[] | PromiseLike<TRPolcodeModel[]>) => {
//             //     await res.forEach((element: TRPolcodeModel) => {
//             //         // element.comcard_issue = new Date(element.comcard_issue);
//             //         // element.comcard_expire = new Date(element.comcard_expire);
//             //     });
//             //     this.TRPolcodeList = await res;

//             //     if (this.TRPolcodeList.length > 0) {
//             //         this.selectedTRPolcode = this.TRPolcodeList[0];
//             //     }
//             // });
//     }
//     onRowSelectComcard(event: Event) {}
//     comcard_summit() {
//         this.comcard_addItem(this.selectedTRPolcode);
//         this.new_card = false;
//         this.edit_comcard = false;
//         this.displayManage = false;
//     }
//     comcard_remove() {
//         this.selectedTRPolcode.codestructure_code = '9999';
//         this.comcard_addItem(this.selectedTRPolcode);
//         this.new_card = false;
//         this.edit_comcard = false;
//     }
//     comcard_delete() {}
//     comcard_cancel() {
//         this.new_card = false;
//         this.edit_comcard = false;
//         this.displayManage = false;
//     }
//     comcard_addItem(model: TRPolcodeModel) {
//         const itemNew: TRPolcodeModel[] = [];
//         for (let i = 0; i < this.TRPolcodeList.length; i++) {
//             if (this.TRPolcodeList[i].polcode_id == model.polcode_id) {
//                 //-- Notting
//             } else {
//                 itemNew.push(this.TRPolcodeList[i]);
//             }
//         }
//         //-- 9999 for delete
//         if (model.polcode_id != '9999') {
//             itemNew.push(model);
//         }
//         this.TRPolcodeList = [];
//         this.TRPolcodeList = itemNew;
//         this.TRPolcodeList.sort(function (a, b) {
//             return parseInt(a.polcode_id) - parseInt(b.polcode_id);
//         });
//     }
//     record_comcard() {
//         if (this.TRPolcodeList.length == 0) {
//             return;
//         }
//     //     this.polcodeService
//     //         .getMTPolcodeList(
//     //             this.selectedTRPolcode.codestructure_code,
//     //             this.TRPolcodeList
//     //         )
//     //         .then((res) => {
//     //             let result = JSON.parse(res);
//     //             if (result.success) {
//     //             } else {
//     //             }
//     //         });
//     }

//     confirmRecord() {
//         this.confirmationService.confirm({
//             message: this.title_confirm_record,
//             header: this.title_confirm,
//             icon: 'pi pi-exclamation-triangle',
//             accept: () => {
//                 this.doRecordCombranch();
//             },
//             reject: () => {
//                 this.messageService.add({
//                     severity: 'warn',
//                     summary: 'Cancelled',
//                     detail: this.title_confirm_cancel,
//                 });
//             },
//         });
//     }

//     doRecordCombranch() {
//         this.combranchService
//             .combranch_record(this.selectedCombranch)
//             .then((res) => {
//                 // console.log(res);

//                 let result = JSON.parse(res);

//                 if (result.success) {
//                     //-- Transaction
//                     this.record_comcard();
//                     this.doLoadCombranch();

//                     this.messageService.add({
//                         severity: 'success',
//                         summary: 'Success',
//                         detail: result.message,
//                     });
//                     this.router.navigateByUrl('system/Branch');

//                 } else {
//                     this.messageService.add({
//                         severity: 'error',
//                         summary: 'Error',
//                         detail: result.message,
//                     });
//                 }
//             });
//     }

//     close() {
//         this.new_combranch = false;
//         this.selectedCombranch = new CombranchModel();
//     }

//     clearManage() {
//         this.new_comaddress = false;
//         this.edit_comaddress = false;

//         this.new_comaddresseen = false;
//         this.edit_comaddresseen = false;

//         this.new_card = false;
//         this.edit_comcard = false;
//     }
// }
